// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WikipediaDAW.ContextModels;

#nullable disable

namespace WikipediaDAW.Migrations
{
    [DbContext(typeof(UtilizatorContext))]
    [Migration("20221227123425_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WikipediaDAW.Models.Articol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Autor_creareId")
                        .HasColumnType("int");

                    b.Property<string>("Continut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data_adaugarii")
                        .HasColumnType("datetime2");

                    b.Property<string>("Domeniu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Protejat")
                        .HasColumnType("bit");

                    b.Property<string>("Titlu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Autor_creareId");

                    b.ToTable("articole");
                });

            modelBuilder.Entity("WikipediaDAW.Models.Istoric_admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Actiune")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilizatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilizatorId");

                    b.ToTable("istorici_admin");
                });

            modelBuilder.Entity("WikipediaDAW.Models.Istoric_editare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticolId")
                        .HasColumnType("int");

                    b.Property<string>("Autor_editare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data_editarii")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArticolId");

                    b.ToTable("istorici_editare");
                });

            modelBuilder.Entity("WikipediaDAW.Models.Utilizator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("utilizatori");
                });

            modelBuilder.Entity("WikipediaDAW.Models.Articol", b =>
                {
                    b.HasOne("WikipediaDAW.Models.Utilizator", "Autor_creare")
                        .WithMany()
                        .HasForeignKey("Autor_creareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor_creare");
                });

            modelBuilder.Entity("WikipediaDAW.Models.Istoric_admin", b =>
                {
                    b.HasOne("WikipediaDAW.Models.Utilizator", "Utilizator")
                        .WithMany()
                        .HasForeignKey("UtilizatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("WikipediaDAW.Models.Istoric_editare", b =>
                {
                    b.HasOne("WikipediaDAW.Models.Articol", "Articol")
                        .WithMany()
                        .HasForeignKey("ArticolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articol");
                });
#pragma warning restore 612, 618
        }
    }
}
